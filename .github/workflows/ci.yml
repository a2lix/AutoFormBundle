name: CI

on:
  push:
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'

      - name: Cache Composer packages
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-8.4-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-php-8.4-composer-

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run php-cs-fixer (dry run)
        run: vendor/bin/php-cs-fixer fix --dry-run --diff --verbose

  static-analysis:
    name: Static Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'

      - name: Cache Composer packages
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-8.4-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-php-8.4-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run psalm
        run: vendor/bin/psalm

  tests:
    name: PHP ${{ matrix.php }}, Symfony ${{ matrix.symfony }}, deps ${{ matrix.deps_name }}
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.stability == 'dev' }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Symfony 7.3 (stable)
          - php: '8.4'
            symfony: '7.3'
            composer_args: '--prefer-stable'
            stability: 'stable'
            deps_name: 'stable'
          - php: '8.4'
            symfony: '7.3'
            composer_args: '--prefer-lowest'
            stability: 'stable'
            deps_name: 'lowest'

          # Symfony 7.4 (dev)
          - php: '8.4'
            symfony: '7.4'
            composer_args: '--prefer-stable'
            stability: 'dev'
            deps_name: 'stable'
          - php: '8.4'
            symfony: '7.4'
            composer_args: '--prefer-lowest'
            stability: 'dev'
            deps_name: 'lowest'

          # Symfony 8.0 (dev)
          - php: '8.4'
            symfony: '8.0'
            composer_args: '--prefer-stable'
            stability: 'dev'
            deps_name: 'stable'

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}

      - name: Cache global Composer packages
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-php-${{ matrix.php }}-composer-global-cache
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php }}-composer-global-cache

      - name: symfony/flex is required to install the correct symfony version
        run: |
          composer global config --no-plugins allow-plugins.symfony/flex true
          composer global require symfony/flex --quiet

      - name: Configure Composer stability
        run: composer config minimum-stability ${{ matrix.stability }}

      - name: Configure Symfony version for symfony/flex
        run: composer config extra.symfony.require "${{ matrix.symfony }}.*"

      - name: Cache Composer packages
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ matrix.php }}-symfony-${{ matrix.symfony }}-${{ matrix.deps_name }}-${{ hashFiles('**/composer.json', '**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php }}-symfony-${{ matrix.symfony }}-${{ matrix.deps_name }}-

      - name: Install dependencies (${{ matrix.deps_name }})
        run: composer update ${{ matrix.composer_args }} --no-progress --no-scripts --no-plugins
      
      - name: Run phpunit
        run: vendor/bin/phpunit